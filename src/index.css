/* @tailwind base;
@tailwind components;
@tailwind utilities; */

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
}

:root {
  --hue: 220;
  --accent: var(--hue) 50% 50%;
  --bkg: var(--hue) 40% 98%;
  --txt: var(--hue) 70% 12%;
}

body {
  font-family: monospace, sans-serif;
  display: grid;
  place-items: center;
  min-height: 100vh;
  font-size: 3rem;
  background-color: hsl(var(--bkg));
  padding: 2rem;
  color: hsl(var(--txt));
}

img {
  display: block;
  max-width: 100%;
}

button {
  font: inherit;
  font-weight: bold;
  background: none;
  border: none;
  padding: 0.5rem 1.5rem;
  border-radius: 0.5rem;
  font-size: 30px;
  cursor: pointer;
  margin-bottom: 1rem;
  box-shadow: 0 0 2rem hsl(var(--accent) / 0.4), 0 0 0 -0.4rem hsl(var(--bkg)),
    0 0 0 -0.8rem hsl(var(--accent));
  transition: box-shadow 600ms ease-in-out !important;
}

button:focus {
  outline: none;
}

button:is(:hover, :focus-visible) {
  box-shadow: 0 0 0 hsl(var(--accent) / 0.2), 0 0 0 0.3rem hsl(var(--bkg)),
    0 0 0 0.6rem hsl(var(--accent));
}

.app {
  display: grid;
  place-items: center;
  gap: 1rem;
}

.gameboard {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  background-color: hsl(var(--accent) / 0.1);
  padding: 1rem;
  border-radius: 2rem;
  border: 4px solid hsl(var(--accent));
  box-shadow: 0 2px 2rem hsl(var(--accent) / 0.3);
  gap: 1rem;
}

.card {
  display: grid;
  position: relative;
  place-items: center;
  width: 80px;
  height: 80px;
  background-color: hsl(var(--bkg));
  user-select: none;
  border: 2px solid hsl(var(--accent));
  box-shadow: 0 0 0 hsl(var(--accent) / 0.2), 0 0 0 -0.3rem hsl(var(--bkg)),
    0 0 0 -0.6rem hsl(var(--accent));
  transition: transform 600ms ease !important;
}

[disabled],
.card.matched {
  opacity: 0.2;
  pointer-events: none;
  cursor: not-allowed;
}

.side {
  pointer-events: none;
  position: absolute;
}

:is(.card.matched, .card.flipped, :focus) .back {
  transform: rotateY(0deg);
}

:is(.card.matched, .card.flipped, :focus) .front {
  transform: rotateY(90deg);
}

.back {
  transform: rotateY(90deg);
  font-size: 3rem;
}
